function frat2(x, y, d, n);
    % x 为正方形的顶点的横坐标，可取0 （一个顶点代表一个小正方形）
    % y 为正方形的顶点的纵坐标，可取0
    % d 为初始正方形边长，可取1
    % n为迭代次数，可取4
    for p = 1:n; %实现迭代过程,计算所有的顶点坐标
        a1 = []; %保存迭代后所有顶点的x坐标
        51
        b1 = []; %保存迭代后所有顶点的y坐标
        %根据小正方形的顶点坐标，
        %计算迭代后形成的8个新的小正方形的顶点坐标
        for q = 1:length(x); %每个小正方形计算一次
            x1 = x(q) + [0, d / 3, 2 * d / 3, 0, 2 * d / 3, 0, d / 3, 2 * d / 3]; %新的x坐标
            y1 = y(q) + [0, 0, 0, d / 3, d / 3, 2 * d / 3, 2 * d / 3, 2 * d / 3]; %新的y坐标
            a1 = [a1, x1]; %所有顶点x坐标存入a1
            b1 = [b1, y1]; %所有顶点y坐标存入b1
        end

        d = d / 3; %迭代一次，边长缩小
        x = a1; %全部的x坐标重新放入x
        y = b1; %全部的y坐标重新放入y
    end

    hold on%在同一个图形窗口显示

    for q = 1:length(x); %用蓝色注满多边形区域
        fill(x(q) + [0, d, d, 0, 0], y(q) + [0, 0, d, d, 0],  'b')%
    end

    hold off%
    axis off%不要坐标轴
    axis equal%各坐标轴同比例
    %不显示这些正方形的边界
    set(findobj(gcf,  'type',  'patch'),  'edgecolor',  'none')
end
